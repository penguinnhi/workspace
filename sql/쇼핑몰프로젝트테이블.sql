-- 쇼핑몰 프로젝트 테이블 정의

-- 테이블 종류
-- 1. 회원 정보 테이블
-- 2. 상품 카테고리 테이블
-- 3. 상품 정보 테이블
-- 4. 상품 이미지 정보 테이블
-- 5. 장바구니 정보 테이블
-- 6. 구매 정보 테이블 


-- 1. 회원 정보 테이블
-- 권한 : USER , ADMIN
CREATE TABLE SHOP_MEMBER (
	MEM_ID VARCHAR(50) PRIMARY KEY
	, MEM_PW VARCHAR(100) NOT NULL
	, MEM_NAME VARCHAR(50) NOT NULL
	, MEM_TEL VARCHAR(30) UNIQUE
	, POST VARCHAR(10)
	, MEM_ADDR VARCHAR(50) 
	, ADDR_DETAIL VARCHAR(100)
	, MEM_EMAIL VARCHAR(100)
	, MEM_ROLE VARCHAR(30) DEFAULT 'USER'
);

SELECT * FROM shop_member;

INSERT INTO shop_member (
	MEM_ID
	,MEM_PW
	,MEM_NAME
	,MEM_ROLE
) VALUES (
	'ADMIN'
	,'a123'
	,'관리자'
	,'ADMIN'
);

-- 2.상품 카테고리 테이블
CREATE TABLE ITEM_CATEGORY(
	CATE_CODE INT PRIMARY KEY AUTO_INCREMENT
	, CATE_NAME VARCHAR(50) NOT NULL UNIQUE
);

SELECT * FROM item_category;

-- 카테고리 데이터
INSERT INTO item_category VALUES (1,'소설/시/에세이');
INSERT INTO item_category VALUES (2,'인문/사회/정치');
INSERT INTO item_category VALUES (3,'IT/예술/과학');

-- 3.상품 정보 테이블
-- ITEM_STATUS 상품 상태 : FOR SALE판매중, SOLD OUT매진
CREATE TABLE SHOP_ITEM(
	ITEM_CODE INT PRIMARY KEY AUTO_INCREMENT
	, ITEM_NAME VARCHAR(50) NOT NULL UNIQUE
	, ITEM_PRICE INT NOT NULL
	, ITEM_INTRO VARCHAR(100) 
	, ITEM_STOCK INT DEFAULT 20
	, ITEM_STATUS VARCHAR(10) DEFAULT 'FOR_SALE'
	, CATE_CODE INT NOT NULL REFERENCES ITEM_CATEGORY (CATE_CODE)
);

SELECT * FROM shop_item;
DELETE FROM shop_item;

-- 4. 상품 이미지 정보 테이블 
-- ORIGIN_FILE_NAME : 원본 파일명
-- ATTACHED_FILE_NAME : 첨부된 파일명
-- IS MAIN : 대표 이미지 여부 (Y, N)

CREATE TABLE ITEM_IMG (
	IMG_CODE INT PRIMARY KEY AUTO_INCREMENT
	, ORIGIN_FILE_NAME VARCHAR(100) NOT NULL
	, ATTACHED_FILE_NAME VARCHAR(100) NOT NULL
	, IS_MAIN VARCHAR(5) NOT NULL
	, ITEM_CODE INT NOT NULL REFERENCES shop_item (ITEM_CODE) ON DELETE CASCADE 
);

SELECT * FROM ITEM_IMG;

INSERT INTO ITEM_IMG (
	ORIGIN_FILE_NAME,ATTACHED_FILE_NAME,IS_MAIN,ITEM_CODE
) VALUES (
	'abc.jpg','aaa.jpg','Y',1),(),();


-- 현재 저장된 ITEM_CODE의 가장 큰 값을 조회 
SELECT MAX(ITEM_CODE) +1 
FROM shop_item;

CREATE TABLE test_item1 (
	ITEM_CODE INT AUTO_INCREMENT PRIMARY KEY
	, ITEM_NAME VARCHAR(50) NOT NULL
);

INSERT INTO test_item1 (ITEM_NAME) VALUES ('BB');

DELETE FROM test_item1;
SELECT * FROM test_item1;

-- 다음에 INSERT 할 때 들어갈 ITEM_CODE 조회 
SELECT MAX(ITEM_CODE)+1 FROM test_item1;

-- 데이터가 하나도 없다면 1을 조회 
SELECT IFNULL(MAX(ITEM_CODE),0)+1
FROM test_item1;

-- NULL 값에 0 넣는듯 
SELECT COMM,IFNULL(COMM,0) FROM emp;


-- 5. 장바구니 정보 테이블

CREATE TABLE SHOP_CART (
	CART_CODE INT PRIMARY KEY AUTO_INCREMENT
	, ITEM_CODE INT NOT NULL REFERENCES shop_item (ITEM_CODE)
	, CART_CNT INT NOT NULL
	, MEM_ID VARCHAR(50) NOT NULL REFERENCES shop_member (MEM_ID)
	, CART_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
); 

SELECT * FROM shop_cart;

SELECT CART_CODE
   ,S.ITEM_CODE
   ,ITEM_NAME
   ,ITEM_PRICE
   ,CART_CNT
   ,S.MEM_ID
   ,CART_DATE
   ,ATTACHED_FILE_NAME
FROM SHOP_CART S,shop_item I,item_img IMG
WHERE MEM_ID='ADMIN'
AND S.ITEM_CODE=I.ITEM_CODE
AND I.ITEM_CODE=IMG.ITEM_CODE
AND S.ITEM_CODE=IMG.ITEM_CODE
AND IS_MAIN='Y';


DELETE FROM shop_cart;

-- 내 장바구니에 현재 선택한 상품이 있는지 확인하는 쿼리
SELECT CART_CODE
FROM shop_cart
WHERE ITEM_CODE=7
AND MEM_ID='ADMIN';
-- 장바구니 상품의 수량변경
UPDATE shop_cart 
SET CART_CNT= CART_CNT+
	,CART_DATE=NOW()
WHERE ITEM_CODE=7
AND MEM_ID='ADMIN';




-- 6. 구매 정보 테이블




